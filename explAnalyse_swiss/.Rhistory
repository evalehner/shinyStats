swiss
head(swiss2)
library(shiny)
library(datasets)
swiss2 <- data.frame(swiss$Fertility, swiss$Agriculture, swiss$Education, swiss$Catholic,swiss$Infant.Mortality)
colnames(swiss2) <- c("Fertility", "Agriculture", "Education" , "Catholic",  "Infant.Mortality")
var <- "Fertility"
var
swiss2$var
mpgData <- mtcars
head(mpgData)
mpgData$am <- factor(mpgData$am, labels = c("Automatic", "Manual"))
head(mpgData)
summary(data= swiss2)
summary(swiss2)
t <- summary(swiss2)
t
dim(t)
t$V1
?boxplot
runApp('userInterface.R')
runApp('userInterface.R')
?paste
runApp('userInterface.R')
runApp('userInterface.R')
runApp('userInterface.R')
swiss2[,2]
swiss2[,1]
swiss2[,"Fertility"]
runApp('userInterface.R')
var <- "Fertility"
swiss2[, var]
runApp('userInterface.R')
runApp('userInterface.R')
runApp('userInterface.R')
runApp('userInterface.R')
runApp('userInterface.R')
Sys.setenv(LANG = "en")
Sys.setenv(LANG = "en")
runApp('userInterface.R')
Sys.getenv()
Sys.setenv(LANGUAGE = "en")
runApp('userInterface.R')
runApp('userInterface.R')
?renderTable
runApp('userInterface.R')
runApp('userInterface.R')
runApp('userInterface.R')
runApp('userInterface.R')
library(shiny); runApp('ui.R')
runApp('ui.R')
swiss
# Code der nur 1x laufen muss außerhalb ver server Funktion um performance zu verbessern
swiss2 <- data.frame(swiss$Fertility, swiss$Agriculture, swiss$Education, swiss$Catholic,swiss$Infant.Mortality)
runApp('ui.R')
ui <- fluidPage(
# Titel
titlePanel(title = "Explorative Datenanalyse von Datensatz Swiss"),
br(),
helpText("Write sth. to explain what to do"),
?numericInput
tabsetPanel(
tabPanel("View Raw Data",
sidebarPanel(
numericInput("obs", "Number of observations to view:", 10)
),
mainPanel(
tableOutput("view"))
),
tabPanel("Explore one Variable",
helpText("Explain Purpose"),
sidebarLayout(
sidebarPanel(selectInput(inputId = "var", label = "Choose a variable",
choices = names(swiss2))),
mainPanel(plotOutput("summaryPlot"),
verbatimTextOutput("summaryStatisitcs")))
),
tabPanel("View Scatterplot", plotOutput("scatterplot")
),
tabPanel("View Linear Model to Explain Education",
sidebarLayout(
sidebarPanel(checkboxGroupInput(inputId = "var_4_linearModel", label = "Choose a variable",
choices = names(swiss2), width = '100%')),
mainPanel(plotOutput(outputId = "linModelPlot"),
verbatimTextOutput(outputId = "summary_linearModel", placeholder = TRUE))
)
)
)
)
ui <- fluidPage(
# Titel
titlePanel(title = "Explorative Datenanalyse von Datensatz Swiss"),
br(),
helpText("Write sth. to explain what to do"),
?numericInput()
tabsetPanel(
tabPanel("View Raw Data",
sidebarPanel(
numericInput("obs", "Number of observations to view:", 10)
),
mainPanel(
tableOutput("view"))
),
tabPanel("Explore one Variable",
helpText("Explain Purpose"),
sidebarLayout(
sidebarPanel(selectInput(inputId = "var", label = "Choose a variable",
choices = names(swiss2))),
mainPanel(plotOutput("summaryPlot"),
verbatimTextOutput("summaryStatisitcs")))
),
tabPanel("View Scatterplot", plotOutput("scatterplot")
),
tabPanel("View Linear Model to Explain Education",
sidebarLayout(
sidebarPanel(checkboxGroupInput(inputId = "var_4_linearModel", label = "Choose a variable",
choices = names(swiss2), width = '100%')),
mainPanel(plotOutput(outputId = "linModelPlot"),
verbatimTextOutput(outputId = "summary_linearModel", placeholder = TRUE))
)
)
)
)
?numericInput()
runApp('ui.R')
runApp('ui.R')
swiss2$swiss.Fertility
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
lm(swiss2$swiss.Education ~ swiss2$swiss.Fertility)
lm(swiss2$Education ~ swiss2$Fertility)
runApp('ui.R')
lm(swiss2$swiss.Education ~ swiss2$swiss.Fertility)
lm(swiss2$Education ~ swiss2$Fertility, data = swiss2)
runApp('ui.R')
swiss2$swiss.Education
swiss2$Education
swiss2$swiss.Education
lm(swiss2$swiss.Education ~ swiss2$swiss.Fertility)
summary(lm(swiss2$swiss.Education ~ swiss2$swiss.Fertility))
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
# plot(swiss2) liefert scatterplot ohne korrelationskoeffizienten
pairs(swiss2)
# plot(swiss2) liefert scatterplot ohne korrelationskoeffizienten
?pairs()
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
swiss2
# Code der nur 1x laufen muss außerhalb ver server Funktion um performance zu verbessern
# Achtung: app läuft nur wenn man swiss2 manuell 'einließt'
# swiss2 <- data.frame(swiss$Fertility, swiss$Agriculture, swiss$Education, swiss$Catholic,swiss$Infant.Mortality)
swiss2 <- swiss
swiss2
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
runApp('ui.R')
# Code der nur 1x laufen muss außerhalb ver server Funktion um performance zu verbessern
# Achtung: app läuft nur wenn man swiss2 manuell 'einließt'
data("pima")
library(shiny)
library(datasets)
data("pima")
MASS::Pima.te
head(MASS::Pima.te)
head(MASS::Pima.tr)
MASS::Pima.te
MASS::Pima.tr
# Code der nur 1x laufen muss außerhalb ver server Funktion um performance zu verbessern
# Achtung: app läuft nur wenn man swiss2 manuell 'einließt'
data("Pima")
# Code der nur 1x laufen muss außerhalb ver server Funktion um performance zu verbessern
# Achtung: app läuft nur wenn man swiss2 manuell 'einließt'
data("Pima.te")
# Code der nur 1x laufen muss außerhalb ver server Funktion um performance zu verbessern
# Achtung: app läuft nur wenn man swiss2 manuell 'einließt'
data("MASS::Pima.te")
# Code der nur 1x laufen muss außerhalb ver server Funktion um performance zu verbessern
# Achtung: app läuft nur wenn man swiss2 manuell 'einließt'
data(MASS::Pima.te)
# Code der nur 1x laufen muss außerhalb ver server Funktion um performance zu verbessern
# Achtung: app läuft nur wenn man swiss2 manuell 'einließt'
data(MASS::Pima.te)
MASS::Pima.te
pimaTe <- MASS::Pima.te
pimaTr <- MASS::Pima.tr
pimaTe
abstract(pimaTe)
pimaTe.abstract()
pimaTe()
summary(pimaTe)
summary(pimaTr)
pimaTe
pimaTr
pima <- pimaTe + pimaTr
pima <- append(pimaTe, pimaTr)
pima
pima <- data.frame(pimaTe, pimaTr)
pima <- rbind(pimaTe, pimaTr)
pima
rownames(pima)
# Hier wird regressionsmodell schrittweise gebaut
# wenn man reaktiven wert weiter verwendet muss man ihn später wieder reaktiv gestalten
# https://stackoverflow.com/questions/26454609/r-shiny-reactive-error
pima
runApp('~/owncloud/BINF/spez_stat/shinyStats/explAnalyse_pima')
